Name:
See Code Projects
OR
Share Code Projects

Description:
On this project you can publish your projects and share it with other people they can download it and
share your project ideas and make friends and work togeter on a project. You need a account.

Date:
☐ 30-04-2020

What we are gonna use:
- Bootstrap
- Firebase
- firebase-admin
- firebase-functions
- vue-head

Login methods:
- Email, Password
- Google account
- Github

todo:
    ✔ Make Vue project @done(20-05-29 13:34)
    ✔ Make Firebase database @done(20-05-29 13:34)
    ✔ Make Homepage design in Photoshop @done(20-05-29 13:34)
    ✔ Make Faq design in Photoshop @done(20-05-29 13:34)
    ✔ Make Login design in Photoshop @done(20-05-29 13:34)
    ✔ Make Register design in Photoshop @done(20-05-29 13:34)
    ✔ Install all packets @done(20-05-29 13:34)
    ✔ Make a illustrator vector @done(20-05-29 13:34)
    ✔ Code login page @done(20-05-29 13:34)
    ✔ Code Register page @done(20-05-29 13:34)
    ✔ Connect Vue project with Firebase @done(20-05-29 13:34)
    ✔ Backend register @done(20-05-29 13:34)
    ✔ Backend login @done(20-05-29 13:34)
    ✔ Design project page in Photoshop @done(20-05-29 13:34)
    ✔ Code project page (Without firebase data) @done(20-05-29 13:34)
    ✔ Favorite img @click done @done(20-05-29 13:34)
    ✔ Make the icons bigger of the vector @done(20-05-29 13:34)
    ✔ Make a SUBMIT PROJECT page @done(20-05-29 13:34)
    ✔ Code submit project page and look for designs on internet @done(20-05-29 13:34)
    ✔ Make a form and push the information to the Firebase database @done(20-05-29 13:34)
    ✔ Preview before publishing @done(20-05-29 13:34)
    ✔ Get data from firebase database on Project page @done(20-05-29 13:34)
    ✔ Delete button need to work @done(20-05-29 13:34)
    ✔ Edit button clickable goes to page @done(20-05-29 13:34)
    ✔ Make edit page @done(20-05-29 13:34)
    ✔ More info page and put all the information from the database @done(20-05-30 20:08)
    ✔ Push email and username on a apart table @done(20-05-30 21:07)
    ✔ When you register go to create profile page @done(20-05-31 22:34)
        ✔ Your slogan @done(20-05-31 22:34)
        ✔ GitHub username @done(20-05-31 22:34)
        ✔ Facebook URL @done(20-05-31 22:34)
        ✔ Instagram URL @done(20-05-31 22:34)
        ✔ Twitter URL @done(20-05-31 22:34)
        ✔ Linkedin URL @done(20-05-31 22:34)
        ✔ Website URL @done(20-05-31 22:34)
    ✔ All the data from the create profile page is going to the database @done(20-05-31 22:34)
    ✔ Can't push the currentuser to the database @done(20-06-01 21:12)
    ✔ If you dont have a profile you can't submit a project (not verified) @done(20-06-03 01:44)
        ✔ Make a variable with verified is null or false if it is true you can submit project. @done(20-06-03 01:45)
    ✔ Add Register page USERNAME input require @done(20-06-03 20:14)
    ✔ Back button by edit page @done(20-06-05 20:32)
    ✔ Created date to firebase when you register @done(20-06-05 23:09)


@LATER:
    ✘ Recode homepage page @cancelled(20-04-30 22:30)
    ✘ Code faq page @cancelled(20-05-04 17:28)
    ✘ Favorite img click uid of post (True or false) checkbox @cancelled(20-05-08 18:49)
    ✘ Button for favorite the post and goes to favorite page (Array push etc) @cancelled(20-05-08 18:44)
    ✘ Make admin account @cancelled(20-05-23 22:57)

@IDEAS:
    ✘ Profile picture @cancelled(20-05-28 17:14)

@today 
    ✘ @Waiting Check if currentUser is verified @cancelled(20-06-03 01:45)
    ✘ Profile page @cancelled(20-05-31 01:20)
        - Date when account is created
        - Design (https://miro.medium.com/max/1600/1*3k_OAbqN2OmbNSNh_IHKpA.png)


        
☐ Can only visit if user is logged in
```
<script>
import firebase from 'firebase';
export default {
    data() {
        return {
            isLoggedIn: false,
            currentUser: false,
            user: ''
        }
    },
    mounted() {
        if(firebase.auth().currentUser) {
            this.isLoggedIn = true;
            this.user = firebase.auth().currentUser.email;
        }
        firebase.auth().onAuthStateChanged(currentUser => {
            if (currentUser) {
                this.user = firebase.auth().currentUser.email;
                this.isLoggedIn = true;
            } else {
                this.$router.push('/Login')
            }
        });
    }
}
</script>
```

☐ Profile picture
```
<input type="file" id="fileUploader" />

file: {}

register() {
    var el = document.getElementById('fileUploader');
        el.addEventListener('change', function (e) {
        this.file = e.target.files[0];
    })
    firebase.auth().createUserWithEmailAndPassword(this.email, this.password)
        .then(/*eslint-disable-line*/user => {
            // setTimeout(() => {
            //     this.$router.push('/');
            //     location.reload();
            // }, 2000);
            firebase
            .storage()
            .ref("users")
            .child(user.user.uid + "/profile.jpg")
            .put(this.file);
            this.isHidden = false;
        },
        err => {  
            alert(err.message);
        })
},
    uploadImage(e) {
        let file = e.target.files[0];
        firebase
            .app()
            .storage()
            .ref('images')
            .child(file.name)
            .put(this.file);
    },
```